<h3>Assembly</h3>
@page "/assembly/{id:guid}"
@inject HttpClient Http
@inject IJSRuntime JS

<link rel="stylesheet" href="css/assembly-detail.css" />

<Heading Size="HeadingSize.Is1">
    <Span>@selectedAssembly.Name</Span>&nbsp;
    <Small Class="text-muted">
        <Span>@selectedAssembly.FullName</Span>
    </Small>
</Heading>
<Row>
    <Column ColumnSize="ColumnSize.Is3">
        <Heading Size="HeadingSize.Is2" Class="namespace-title text-muted">Namespaces</Heading>
        <Div ElementId="namespaces">
            <ListGroup Flush="true">
                @foreach (var ns in selectedAssembly.Namespaces)
                {
                    <ListGroupItem Class="list-group-item-action flex-column align-items-start">
                        <Div Class="d-flex w-100 justify-content-between">
                            <Heading Size="HeadingSize.Is6" Class="mb-1 text-truncate" title="@ns.Name">@ns.Name</Heading>
                        </Div>
                        <Paragraph Class="mb-1">
                            <Button hidden="@ns.Classes.IsNullOrEmpty()" Clicked="(() => ShowClasses(ns.Name))" Color="Color.Secondary" title="# of classes">@ns.Classes.Count Classes</Button>
                            <Button hidden="@ns.Structures.IsNullOrEmpty()" Clicked="(() => ShowStructures(ns.Name))" Color="Color.Info" title="# of structures">@ns.Structures.Count Structures</Button>
                            <Button hidden="@ns.Interfaces.IsNullOrEmpty()" Clicked="(() => ShowInterfaces(ns.Name))" Color="Color.Primary" title="# of interfaces">@ns.Interfaces.Count Interfaces</Button>
                            <Button hidden="@ns.Enumerations.IsNullOrEmpty()" Clicked="(() => ShowEnumerations(ns.Name))" Color="Color.Secondary" title="# of enumerations">@ns.Enumerations.Count Enums</Button>
                            <Button hidden="@ns.Delegates.IsNullOrEmpty()" Clicked="(() => ShowDelegates(ns.Name))" Color="Color.Primary" title=" # of delegates">@ns.Delegates.Count Delegates</Button>
                        </Paragraph>
                    </ListGroupItem>
                }
            </ListGroup>
        </Div>
    </Column>

    @if (selectedNamespace != null)
    {
        <Column ColumnSize="ColumnSize.Is9" Class="border border-top-0 border-bottom-0 border-right-0">
            <Heading Size="HeadingSize.Is2" ElementId="namespace-title" Class="namespace-title">@selectedNamespace.Name</Heading>
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Heading Size="HeadingSize.Is3">@selectedTypesTitle</Heading>
                    <Div ElementId="types">
                        <ListGroup Flush="true" ElementId="type-list">
                            @foreach (var type in selectedTypes)
                            {
                                <ListGroupItem Class="list-group-item-action flex-column align-items-start">
                                    <Button Clicked="(() => ShowType(type))" Color="Color.Link">
                                        <Heading Size="HeadingSize.Is5" Class="list-group-item-heading text-truncate" title="@type.Name">@type.Name</Heading>
                                    </Button>
                                </ListGroupItem>
                            }
                        </ListGroup>
                    </Div>
                </Column>

                @if (selectedType != null)
                {
                    <Column ColumnSize="ColumnSize.Is9" ElementId="type-details">
                        <Column ColumnSize="ColumnSize.Is12" ElementId="type-details-header">
                            <Heading Size="HeadingSize.Is3" title="@selectedType.FullName">
                                @selectedType.Name
                                <Small>
                                    <Badge Color="Color.Primary" hidden="@(!selectedType.IsPublic)">Public</Badge>
                                    <Badge Color="Color.Secondary" hidden="@selectedType.IsPublic">Private</Badge>
                                    <Badge Color="Color.Info" hidden="@(!selectedType.IsAbstract)">Abstract</Badge>
                                    <Badge Color="Color.Warning" hidden="@(!selectedType.IsSealed)">Sealed</Badge>
                                </Small>
                            </Heading>
                            <Breadcrumb>
                                <BreadcrumbItem>Inherited</BreadcrumbItem>
                                @foreach (var parent in selectedType.Parents)
                                {
                                    <BreadcrumbItem>@parent.Name</BreadcrumbItem>
                                }
                            </Breadcrumb>
                            <Paragraph>@selectedType.Summary</Paragraph>
                            <Paragraph Class="text-muted hidden">@selectedType.Remarks</Paragraph>
                            <Paragraph Class="text-muted hidden">@selectedType.Example</Paragraph>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is12" ElementId="type-details-body">
                            <Tabs>
                                <Items>
                                    <li class="nav-item" hidden="@selectedType.Constructors.IsNullOrEmpty()">
                                        <a class="nav-link" href="#Constructors" aria-controls="Constructors" role="tab" data-toggle="tab">
                                            <Image Source="img/method.gif" Border="Border.Is0" Text="method" /> Constructors
                                        </a>
                                    </li>
                                    <li class="nav-item" hidden="@selectedType.Methods.IsNullOrEmpty()">
                                        <a class="nav-link" href="#Methods" aria-controls="Methods" role="tab" data-toggle="tab">
                                            <Image Source="img/method.gif" Border="Border.Is0" Text="method" /> Methods
                                        </a>
                                    </li>
                                    <li class="nav-item" hidden="@selectedType.Properties.IsNullOrEmpty()">
                                        <a class="nav-link" href="#Properties" aria-controls="Properties" role="tab" data-toggle="tab">
                                            <Image Source="img/property.gif" Border="Border.Is0" Text="property" /> Properties
                                        </a>
                                    </li>
                                    <li class="nav-item" hidden="@selectedType.Members.IsNullOrEmpty()">
                                        <a class="nav-link" href="#Members" aria-controls="Members" role="tab" data-toggle="tab">
                                            <Image Source="img/enumeration.gif" Border="Border.Is0" Text="members" /> Members
                                        </a>
                                    </li>
                                </Items>
                                <Content>
                                    <TabPanel ElementId="Constructors" Name="Constructors" hidden="@selectedType.Constructors.IsNullOrEmpty()">
                                        <Accordion>
                                            @foreach (var ctor in selectedType.Constructors)
                                            {
                                                string elementId = $"collapse-{Guid.NewGuid()}";
                                                <Collapse>
                                                    <CollapseHeader>
                                                        <Heading Size="HeadingSize.Is5" Class="mb-0">
                                                            <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#@elementId" aria-expanded="false" aria-controls="collapse-@ctor.Id">
                                                                <Image Source="img/method.gif" Border="Border.Is0" Text="method" /> @(ctor.Name)(@ctor.FormattedParams))
                                                            </button>
                                                        </Heading>
                                                    </CollapseHeader>
                                                    <Div ElementId="@elementId" Class="collapse">
                                                        <CardBody>
                                                            <CardTitle Size="5">@ctor.FullName</CardTitle>
                                                            <CardText>@ctor.Summary</CardText>
                                                            <hr />
                                                            <section hidden="@ctor.Parameters.IsNullOrEmpty()">
                                                                <Heading Size="HeadingSize.Is6" Class="text-warning">Parameters</Heading>
                                                                @foreach (var parameter in ctor.Parameters)
                                                                {
                                                                    <dl>
                                                                        <dt>@parameter.Name</dt>
                                                                        <dd class="small text-muted indent-1"><strong>Type:</strong> @parameter.TypeFullName</dd>
                                                                        <dd class="small text-muted indent-1"><strong>Description:</strong> @parameter.Description</dd>
                                                                    </dl>
                                                                }
                                                            </section>
                                                            <section hidden="@ctor.Remarks.IsNullOrEmpty()">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6">Remarks</Heading>
                                                                <Paragraph>@ctor.Remarks</Paragraph>
                                                            </section>
                                                            <section hidden="@ctor.Example.IsNullOrEmpty()">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6">Example</Heading>
                                                                <Paragraph>@ctor.Example</Paragraph>
                                                            </section>
                                                            <section hidden="@ctor.Exceptions.IsNullOrEmpty()">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6">Exceptions</Heading>
                                                                <Paragraph>@ctor.Exceptions</Paragraph>
                                                            </section>
                                                        </CardBody>
                                                    </Div>
                                                </Collapse>
                                            }
                                        </Accordion>
                                    </TabPanel>
                                    <TabPanel ElementId="Methods" Name="Methods" hidden="@selectedType.Methods.IsNullOrEmpty()">
                                        <Accordion>
                                            @foreach (var method in selectedType.Methods)
                                            {
                                                string elementId = $"collapse-{Guid.NewGuid()}";
                                                <Collapse>
                                                    <CollapseHeader>
                                                        <Heading Size="HeadingSize.Is5" Class="mb-0">
                                                            <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#@elementId" aria-expanded="false" aria-controls="collapse-@method.Id">
                                                                <Image Source="img/method.gif" Border="Border.Is0" Text="method" /> @(method.Name)(@method.FormattedParams)
                                                            </button>
                                                        </Heading>
                                                    </CollapseHeader>
                                                    <Div ElementId="@elementId" Class="collapse">
                                                        <CardBody>
                                                            <CardTitle Size="5">@method.FullName</CardTitle>
                                                            <CardText>@method.Summary</CardText>
                                                            <hr />
                                                            <section hidden="@method.Parameters.IsNullOrEmpty()">
                                                                <Heading Size="HeadingSize.Is6" Class="text-warning">Parameters</Heading>
                                                                @foreach (var parameter in method.Parameters)
                                                                {
                                                                    <dl>
                                                                        <dt>@parameter.Name</dt>
                                                                        <dd class="small text-muted indent-1"><strong>Type:</strong> @parameter.TypeFullName</dd>
                                                                        <dd class="small text-muted indent-1"><strong>Description:</strong> @parameter.Description</dd>
                                                                    </dl>
                                                                }
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(method.Returns)">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6" Class="text-primary">Returns</Heading>
                                                                <dl>
                                                                    <dt>@method.ReturnTypeFullName</dt>
                                                                    <dd class="small text-muted">@method.Returns</dd>
                                                                </dl>
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(method.Remarks)">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6">Remarks</Heading>
                                                                <Paragraph>@method.Remarks</Paragraph>
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(method.Example)">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6">Example</Heading>
                                                                <pre class="prettyprint lang-cs" lang="cs"><code>@method.Example</code></pre>
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(method.Exceptions)">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6">Exceptions</Heading>
                                                                <Paragraph>@method.Exceptions</Paragraph>
                                                            </section>
                                                        </CardBody>
                                                    </Div>
                                                </Collapse>
                                            }
                                        </Accordion>
                                    </TabPanel>
                                    <TabPanel ElementId="Properties" Name="Properties" hidden="@selectedType.Properties.IsNullOrEmpty()">
                                        <Accordion>
                                            @foreach (var property in selectedType.Properties)
                                            {
                                                string elementId = $"collapse-{Guid.NewGuid()}";
                                                <Collapse>
                                                    <CollapseHeader>
                                                        <Heading Size="HeadingSize.Is5" Class="mb-0">
                                                            <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#@elementId" aria-expanded="false" aria-controls="collapse-@property.Id">
                                                                <Image Source="img/property.gif" Border="Border.Is0" Text="method" /> @property.Name
                                                            </button>
                                                        </Heading>
                                                    </CollapseHeader>
                                                    <Div ElementId="@elementId" Class="collapse">
                                                        <CardBody>
                                                            <CardTitle Size="5">@property.FullName</CardTitle>
                                                            <CardText>@property.Summary</CardText>
                                                            <hr />
                                                            <section hidden="@string.IsNullOrEmpty(property.Remarks)">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6">Remarks</Heading>
                                                                <Paragraph>@property.Remarks</Paragraph>
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(property.Example)">
                                                                <hr />
                                                                <Heading Size="HeadingSize.Is6">Example</Heading>
                                                                <Paragraph>@property.Example</Paragraph>
                                                            </section>
                                                        </CardBody>
                                                    </Div>
                                                </Collapse>
                                            }
                                        </Accordion>
                                    </TabPanel>
                                    <TabPanel ElementId="Members" Name="Members" hidden="@selectedType.Members.IsNullOrEmpty()">
                                        <ListGroup>
                                            @foreach (var member in selectedType.Members)
                                            {
                                                <ListGroupItem>
                                                    <Heading Size="HeadingSize.Is6" Class="list-group-item-heading">
                                                        <Image Source="img/enumeration.gif" Border="Border.Is0" Text="members" /> @member.Name
                                                    </Heading>
                                                    <Div Class="list-group-item-text">
                                                        <Small>@member.Description</Small>
                                                    </Div>
                                                </ListGroupItem>
                                            }
                                        </ListGroup>
                                    </TabPanel>
                                </Content>
                            </Tabs>
                        </Column>
                    </Column>
                }
            </Row>
        </Column>
    }
</Row>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private AssemblyModel selectedAssembly;
    private NamespaceModel selectedNamespace;
    private string selectedTypesTitle;
    private ICollection<TypeModel> selectedTypes = new List<TypeModel>();
    private TypeModel selectedType;

    protected override async Task OnInitializedAsync()
    {
        if (Context.Assemblies.IsNullOrEmpty())
        {
            Context.Assemblies = await Http.GetFromJsonAsync<AssemblyModel[]>("js/assemblies.json") ?? new AssemblyModel[0];
        }

        selectedAssembly = Context.Assemblies.First(x => x.Id == Id);
    }

    private void ShowClasses(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Classes";
        selectedTypes = selectedNamespace.Classes;
    }

    private void ShowStructures(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Structures";
        selectedTypes = selectedNamespace.Structures;
    }

    private void ShowInterfaces(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Interfaces";
        selectedTypes = selectedNamespace.Interfaces;
    }

    private void ShowEnumerations(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Enumerations";
        selectedTypes = selectedNamespace.Enumerations;
    }

    private void ShowDelegates(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Delegates";
        selectedTypes = selectedNamespace.Delegates;
    }

    private void ChangeNamespace(string namespaceName)
    {
        selectedType = null;
        selectedTypes = new List<TypeModel>();
        selectedNamespace = selectedAssembly.Namespaces.First(x => x.Name == namespaceName);
    }

    private async void ShowType(TypeModel type)
    {
        selectedType = type;
        await JS.InvokeVoidAsync("onShowType");
    }
}