<h3>Assembly</h3>
@page "/assembly/{id:guid}"
@inject HttpClient Http

<link rel="stylesheet" href="css/assembly-detail.css" />

<h1>
    <span>@selectedAssembly.Name</span>&nbsp;
    <small class="text-muted">
        <span>@selectedAssembly.FullName</span>
    </small>
</h1>
<Row>
    <Column ColumnSize="ColumnSize.Is3">
        <h2 class="namespace-title text-muted">Namespaces</h2>
        <div id="namespaces">
            <ListGroup Flush="true">
                @foreach (var ns in selectedAssembly.Namespaces)
                {
                    <ListGroupItem class="list-group-item-action flex-column align-items-start">
                        <div class="d-flex w-100 justify-content-between">
                            <h6 class="mb-1 text-truncate" title="@ns.Name">@ns.Name</h6>
                        </div>
                        <p class="mb-1">
                            <button type="button" hidden="@ns.Classes.IsNullOrEmpty()" @onclick="(() => ShowClasses(ns.Name))" class="btn btn-sm btn-warning" title="# of classes">@ns.Classes.Count Classes</button>
                            <button type="button" hidden="@ns.Structures.IsNullOrEmpty()" @onclick="(() => ShowStructures(ns.Name))" class="btn btn-sm btn-info" title="# of structures">@ns.Structures.Count Structures</button>
                            <button type="button" hidden="@ns.Interfaces.IsNullOrEmpty()" @onclick="(() => ShowInterfaces(ns.Name))" class="btn btn-sm btn-primary" title="# of interfaces">@ns.Interfaces.Count Interfaces</button>
                            <button type="button" hidden="@ns.Enumerations.IsNullOrEmpty()" @onclick="(() => ShowEnumerations(ns.Name))" class="btn btn-sm btn-default" title="# of enumerations">@ns.Enumerations.Count Enums</button>
                            <button type="button" hidden="@ns.Delegates.IsNullOrEmpty()" @onclick="(() => ShowDelegates(ns.Name))" class="btn btn-sm btn-primary" title=" # of delegates">@ns.Delegates.Count Delegates</button>
                        </p>
                    </ListGroupItem>
                }
            </ListGroup>
        </div>
    </Column>

    @if (selectedNamespace != null)
    {
        <Column ColumnSize="ColumnSize.Is9" class="border border-top-0 border-bottom-0 border-right-0">
            <h2 id="namespace-title" class="namespace-title">@selectedNamespace.Name</h2>
            <div class="row">
                <Column ColumnSize="ColumnSize.Is3">
                    <h3>@selectedTypesTitle</h3>
                    <div id="types">
                        <ListGroup Flush="true" id="type-list">
                            @foreach (var type in selectedTypes)
                            {
                                <ListGroupItem class="list-group-item-action flex-column align-items-start">
                                    <button type="button" @onclick="(() => ShowType(type))" class="btn btn-link">
                                        <h5 class="list-group-item-heading text-truncate" title="@type.Name">@type.Name</h5>
                                    </button>
                                </ListGroupItem>
                            }
                        </ListGroup>
                    </div>
                </Column>

                @if (selectedType != null)
                {
                    <Column ColumnSize="ColumnSize.Is9" id="type-details">
                        <Column ColumnSize="ColumnSize.Is12" id="type-details-header">
                            <h3 title="@selectedType.FullName">
                                @selectedType.Name
                                <small>
                                    <Badge Color="Color.Primary" hidden="@(!selectedType.IsPublic)">Public</Badge>
                                    <Badge Color="Color.Secondary" hidden="@selectedType.IsPublic">Private</Badge>
                                    <Badge Color="Color.Info" hidden="@(!selectedType.IsAbstract)">Abstract</Badge>
                                    <Badge Color="Color.Warning" hidden="@(!selectedType.IsSealed)">Sealed</Badge>
                                </small>
                            </h3>
                            <Breadcrumb>
                                <BreadcrumbItem>Inherited</BreadcrumbItem>
                                @foreach (var parent in selectedType.Parents)
                                {
                                    <BreadcrumbItem>@parent.Name</BreadcrumbItem>
                                }
                            </Breadcrumb>
                            <p>@selectedType.Summary</p>
                            <p class="text-muted hidden">@selectedType.Remarks</p>
                            <p class="text-muted hidden">@selectedType.Example</p>
                        </Column>

                        <Column ColumnSize="ColumnSize.Is12" id="type-details-body">
                            <Tabs>
                                <Items>
                                    <Tab Name="Constructors" hidden="@selectedType.Constructors.IsNullOrEmpty()">
                                        <img src="img/method.gif" border="0" alt="method" /> Constructors
                                    </Tab>
                                    <Tab Name="Methods" hidden="@selectedType.Methods.IsNullOrEmpty()">
                                        <img src="img/method.gif" border="0" alt="method" /> Methods
                                    </Tab>
                                    <Tab Name="Properties" hidden="@selectedType.Properties.IsNullOrEmpty()">
                                        <img src="img/property.gif" border="0" alt="property" /> Properties
                                    </Tab>
                                    <Tab Name="Members" hidden="@selectedType.Members.IsNullOrEmpty()">
                                        <img src="img/enumeration.gif" border="0" alt="members" /> Members
                                    </Tab>
                                </Items>
                                <Content>
                                    <TabPanel Name="Constructors" hidden="@selectedType.Constructors.IsNullOrEmpty()">
                                        <Accordion>
                                            @foreach (var ctor in selectedType.Constructors)
                                            {
                                                string elementId = $"collapse-{Guid.NewGuid()}";
                                                <Collapse>
                                                    <CollapseHeader>
                                                        <Heading Size="HeadingSize.Is5" class="mb-0">
                                                            <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#@elementId" aria-expanded="false" aria-controls="collapse-@ctor.Id">
                                                                <img src="img/method.gif" border="0" alt="method" /> @(ctor.Name)(@ctor.FormattedParams))
                                                            </button>
                                                        </Heading>
                                                    </CollapseHeader>
                                                    <div id="@elementId" class="collapse">
                                                        <CardBody>
                                                            <CardTitle Size="5">@ctor.FullName</CardTitle>
                                                            <CardText>@ctor.Summary</CardText>
                                                            <hr />
                                                            <section hidden="@ctor.Parameters.IsNullOrEmpty()">
                                                                <h6 class="text-warning">Parameters</h6>
                                                                @foreach (var parameter in ctor.Parameters)
                                                                {
                                                                    <dl>
                                                                        <dt>@parameter.Name</dt>
                                                                        <dd class="small text-muted indent-1"><strong>Type:</strong> @parameter.TypeFullName</dd>
                                                                        <dd class="small text-muted indent-1"><strong>Description:</strong> @parameter.Description</dd>
                                                                    </dl>
                                                                }
                                                            </section>
                                                            <section hidden="@ctor.Remarks.IsNullOrEmpty()">
                                                                <hr />
                                                                <h6>Remarks</h6>
                                                                <p>@ctor.Remarks</p>
                                                            </section>
                                                            <section hidden="@ctor.Example.IsNullOrEmpty()">
                                                                <hr />
                                                                <h6>Example</h6>
                                                                <p>@ctor.Example</p>
                                                            </section>
                                                            <section hidden="@ctor.Exceptions.IsNullOrEmpty()">
                                                                <hr />
                                                                <h6>Exceptions</h6>
                                                                <p>@ctor.Exceptions</p>
                                                            </section>
                                                        </CardBody>
                                                    </div>
                                                </Collapse>
                                            }
                                        </Accordion>
                                    </TabPanel>
                                    <TabPanel Name="Methods" hidden="@selectedType.Methods.IsNullOrEmpty()">
                                        <Accordion>
                                            @foreach (var method in selectedType.Methods)
                                            {
                                                string elementId = $"collapse-{Guid.NewGuid()}";
                                                <Collapse>
                                                    <CollapseHeader>
                                                        <Heading Size="HeadingSize.Is5" class="mb-0">
                                                            <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#@elementId" aria-expanded="false" aria-controls="collapse-@method.Id">
                                                                <img src="img/method.gif" border="0" alt="method" /> @(method.Name)(@method.FormattedParams)
                                                            </button>
                                                        </Heading>
                                                    </CollapseHeader>
                                                    <div id="@elementId" class="collapse">
                                                        <CardBody>
                                                            <CardTitle Size="5">@method.FullName</CardTitle>
                                                            <CardText>@method.Summary</CardText>
                                                            <hr />
                                                            <section hidden="@method.Parameters.IsNullOrEmpty()">
                                                                <h6 class="text-warning">Parameters</h6>
                                                                @foreach (var parameter in method.Parameters)
                                                                {
                                                                    <dl>
                                                                        <dt>@parameter.Name</dt>
                                                                        <dd class="small text-muted indent-1"><strong>Type:</strong> @parameter.TypeFullName</dd>
                                                                        <dd class="small text-muted indent-1"><strong>Description:</strong> @parameter.Description</dd>
                                                                    </dl>
                                                                }
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(method.Returns)">
                                                                <hr />
                                                                <h6 class="text-primary">Returns</h6>
                                                                <dl>
                                                                    <dt>@method.ReturnTypeFullName</dt>
                                                                    <dd class="small text-muted">@method.Returns</dd>
                                                                </dl>
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(method.Remarks)">
                                                                <hr />
                                                                <h6>Remarks</h6>
                                                                <p>@method.Remarks</p>
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(method.Example)">
                                                                <hr />
                                                                <h6>Example</h6>
                                                                <pre class="prettyprint lang-cs" lang="cs"><code>@method.Example</code></pre>
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(method.Exceptions)">
                                                                <hr />
                                                                <h6>Exceptions</h6>
                                                                <p>@method.Exceptions</p>
                                                            </section>
                                                        </CardBody>
                                                    </div>
                                                </Collapse>
                                            }
                                        </Accordion>
                                    </TabPanel>
                                    <TabPanel Name="Properties" hidden="@selectedType.Properties.IsNullOrEmpty()">
                                        <Accordion>
                                            @foreach (var property in selectedType.Properties)
                                            {
                                                string elementId = $"collapse-{Guid.NewGuid()}";
                                                <Collapse>
                                                    <CollapseHeader>
                                                        <Heading Size="HeadingSize.Is5" class="mb-0">
                                                            <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#@elementId" aria-expanded="false" aria-controls="collapse-@property.Id">
                                                                <img src="img/property.gif" border="0" alt="method" /> @property.Name
                                                            </button>
                                                        </Heading>
                                                    </CollapseHeader>
                                                    <div id="@elementId" class="collapse">
                                                        <CardBody>
                                                            <CardTitle Size="5">@property.FullName</CardTitle>
                                                            <CardText>@property.Summary</CardText>
                                                            <hr />
                                                            <section hidden="@string.IsNullOrEmpty(property.Remarks)">
                                                                <hr />
                                                                <h6>Remarks</h6>
                                                                <p>@property.Remarks</p>
                                                            </section>
                                                            <section hidden="@string.IsNullOrEmpty(property.Example)">
                                                                <hr />
                                                                <h6>Example</h6>
                                                                <p>@property.Example</p>
                                                            </section>
                                                        </CardBody>
                                                    </div>
                                                </Collapse>
                                            }
                                        </Accordion>
                                    </TabPanel>
                                    <TabPanel Name="Members" hidden="@selectedType.Members.IsNullOrEmpty()">
                                        <ListGroup>
                                            @foreach (var member in selectedType.Members)
                                            {
                                                <ListGroupItem>
                                                    <h6 class="list-group-item-heading"><img src="img/enumeration.gif" border="0" alt="members" /> @member.Name</h6>
                                                    <div class="list-group-item-text">
                                                        <small>@member.Description</small>
                                                    </div>
                                                </ListGroupItem>
                                            }
                                        </ListGroup>
                                    </TabPanel>
                                </Content>
                            </Tabs>
                        </Column>
                    </Column>
                }
            </div>
        </Column>
    }
</Row>

@code {
    [Parameter]
    public Guid Id { get; set; }

    private AssemblyModel selectedAssembly;
    private NamespaceModel selectedNamespace;
    private string selectedTypesTitle;
    private ICollection<TypeModel> selectedTypes = new List<TypeModel>();
    private TypeModel selectedType;

    protected override async Task OnInitializedAsync()
    {
        if (Context.Assemblies.IsNullOrEmpty())
        {
            Context.Assemblies = await Http.GetFromJsonAsync<AssemblyModel[]>("js/assemblies.json");
        }

        selectedAssembly = Context.Assemblies.FirstOrDefault(x => x.Id == Id);
    }

    private void ShowClasses(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Classes";
        selectedTypes = selectedNamespace.Classes;
    }

    private void ShowStructures(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Structures";
        selectedTypes = selectedNamespace.Structures;
    }

    private void ShowInterfaces(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Interfaces";
        selectedTypes = selectedNamespace.Interfaces;
    }

    private void ShowEnumerations(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Enumerations";
        selectedTypes = selectedNamespace.Enumerations;
    }

    private void ShowDelegates(string namespaceName)
    {
        ChangeNamespace(namespaceName);
        selectedTypesTitle = "Delegates";
        selectedTypes = selectedNamespace.Delegates;
    }

    private void ChangeNamespace(string namespaceName)
    {
        selectedType = null;
        selectedTypes = new List<TypeModel>();
        selectedNamespace = selectedAssembly.Namespaces.First(x => x.Name == namespaceName);
    }

    private void ShowType(TypeModel type)
    {
        selectedType = type;
        //window.setTimeout(() => $(".nav-tabs a:first").tab("show"), 200);
        //window.setTimeout(() => PR.prettyPrint(), 200);
    }
}